{
  "version": 3,
  "sources": ["../../@astrojs/svelte/client.js"],
  "sourcesContent": ["const noop = () => {};\r\n\r\nlet originalConsoleWarning;\r\nlet consoleFilterRefs = 0;\r\n\r\nexport default (element) => {\r\n\treturn (Component, props, slotted, { client }) => {\r\n\t\tif (!element.hasAttribute('ssr')) return;\r\n\t\tconst slots = {};\r\n\t\tfor (const [key, value] of Object.entries(slotted)) {\r\n\t\t\tslots[key] = createSlotDefinition(key, value);\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tif (import.meta.env.DEV) useConsoleFilter();\r\n\r\n\t\t\tconst component = new Component({\r\n\t\t\t\ttarget: element,\r\n\t\t\t\tprops: {\r\n\t\t\t\t\t...props,\r\n\t\t\t\t\t$$slots: slots,\r\n\t\t\t\t\t$$scope: { ctx: [] },\r\n\t\t\t\t},\r\n\t\t\t\thydrate: client !== 'only',\r\n\t\t\t\t$$inline: true,\r\n\t\t\t});\r\n\r\n\t\t\telement.addEventListener('astro:unmount', () => component.$destroy(), { once: true });\r\n\t\t} finally {\r\n\t\t\tif (import.meta.env.DEV) finishUsingConsoleFilter();\r\n\t\t}\r\n\t};\r\n};\r\n\r\nfunction createSlotDefinition(key, children) {\r\n\tlet parent;\r\n\treturn [\r\n\t\t() => ({\r\n\t\t\t// mount\r\n\t\t\tm(target) {\r\n\t\t\t\tparent = target;\r\n\t\t\t\ttarget.insertAdjacentHTML(\r\n\t\t\t\t\t'beforeend',\r\n\t\t\t\t\t`<astro-slot${key === 'default' ? '' : ` name=\"${key}\"`}>${children}</astro-slot>`\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\t// create\r\n\t\t\tc: noop,\r\n\t\t\t// hydrate\r\n\t\t\tl: noop,\r\n\t\t\t// destroy\r\n\t\t\td() {\r\n\t\t\t\tif (!parent) return;\r\n\t\t\t\tconst slot = parent.querySelector(\r\n\t\t\t\t\t`astro-slot${key === 'default' ? ':not([name])' : `[name=\"${key}\"]`}`\r\n\t\t\t\t);\r\n\t\t\t\tif (slot) slot.remove();\r\n\t\t\t},\r\n\t\t}),\r\n\t\tnoop,\r\n\t\tnoop,\r\n\t];\r\n}\r\n\r\n/**\r\n * Reduces console noise by filtering known non-problematic warnings.\r\n *\r\n * Performs reference counting to allow parallel usage from async code.\r\n *\r\n * To stop filtering, please ensure that there always is a matching call\r\n * to `finishUsingConsoleFilter` afterwards.\r\n */\r\nfunction useConsoleFilter() {\r\n\tconsoleFilterRefs++;\r\n\r\n\tif (!originalConsoleWarning) {\r\n\t\toriginalConsoleWarning = console.warn;\r\n\t\ttry {\r\n\t\t\tconsole.warn = filteredConsoleWarning;\r\n\t\t} catch (error) {\r\n\t\t\t// If we're unable to hook `console.warn`, just accept it\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Indicates that the filter installed by `useConsoleFilter`\r\n * is no longer needed by the calling code.\r\n */\r\nfunction finishUsingConsoleFilter() {\r\n\tconsoleFilterRefs--;\r\n\r\n\t// Note: Instead of reverting `console.warning` back to the original\r\n\t// when the reference counter reaches 0, we leave our hook installed\r\n\t// to prevent potential race conditions once `check` is made async\r\n}\r\n\r\n/**\r\n * Hook/wrapper function for the global `console.warning` function.\r\n *\r\n * Ignores known non-problematic errors while any code is using the console filter.\r\n * Otherwise, simply forwards all arguments to the original function.\r\n */\r\nfunction filteredConsoleWarning(msg, ...rest) {\r\n\tif (consoleFilterRefs > 0 && typeof msg === 'string') {\r\n\t\t// Astro passes `class` and `data-astro-cid` props to the Svelte component, which\r\n\t\t// outputs the following warning, which we can safely filter out.\r\n\r\n\t\t// NOTE: In practice data-astro-cid props have a hash suffix. Hence the use of a\r\n\t\t// quoted prop name string without a closing quote.\r\n\r\n\t\tconst isKnownSvelteError =\r\n\t\t\tmsg.endsWith(\"was created with unknown prop 'class'\") ||\r\n\t\t\tmsg.includes(\"was created with unknown prop 'data-astro-cid\");\r\n\t\tif (isKnownSvelteError) return;\r\n\t}\r\n\toriginalConsoleWarning(msg, ...rest);\r\n}\r\n"],
  "mappings": ";;;AAAA,IAAM,OAAO,MAAM;AAAC;AAEpB,IAAI;AACJ,IAAI,oBAAoB;AAExB,IAAO,iBAAQ,CAAC,YAAY;AAC3B,SAAO,CAAC,WAAW,OAAO,SAAS,EAAE,OAAO,MAAM;AACjD,QAAI,CAAC,QAAQ,aAAa,KAAK,EAAG;AAClC,UAAM,QAAQ,CAAC;AACf,eAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,OAAO,GAAG;AACnD,YAAM,GAAG,IAAI,qBAAqB,KAAK,KAAK;AAAA,IAC7C;AAEA,QAAI;AACH,UAAI,YAAY,IAAI,IAAK,kBAAiB;AAE1C,YAAM,YAAY,IAAI,UAAU;AAAA,QAC/B,QAAQ;AAAA,QACR,OAAO;AAAA,UACN,GAAG;AAAA,UACH,SAAS;AAAA,UACT,SAAS,EAAE,KAAK,CAAC,EAAE;AAAA,QACpB;AAAA,QACA,SAAS,WAAW;AAAA,QACpB,UAAU;AAAA,MACX,CAAC;AAED,cAAQ,iBAAiB,iBAAiB,MAAM,UAAU,SAAS,GAAG,EAAE,MAAM,KAAK,CAAC;AAAA,IACrF,UAAE;AACD,UAAI,YAAY,IAAI,IAAK,0BAAyB;AAAA,IACnD;AAAA,EACD;AACD;AAEA,SAAS,qBAAqB,KAAK,UAAU;AAC5C,MAAI;AACJ,SAAO;AAAA,IACN,OAAO;AAAA;AAAA,MAEN,EAAE,QAAQ;AACT,iBAAS;AACT,eAAO;AAAA,UACN;AAAA,UACA,cAAc,QAAQ,YAAY,KAAK,UAAU,GAAG,GAAG,IAAI,QAAQ;AAAA,QACpE;AAAA,MACD;AAAA;AAAA,MAEA,GAAG;AAAA;AAAA,MAEH,GAAG;AAAA;AAAA,MAEH,IAAI;AACH,YAAI,CAAC,OAAQ;AACb,cAAM,OAAO,OAAO;AAAA,UACnB,aAAa,QAAQ,YAAY,iBAAiB,UAAU,GAAG,IAAI;AAAA,QACpE;AACA,YAAI,KAAM,MAAK,OAAO;AAAA,MACvB;AAAA,IACD;AAAA,IACA;AAAA,IACA;AAAA,EACD;AACD;AAUA,SAAS,mBAAmB;AAC3B;AAEA,MAAI,CAAC,wBAAwB;AAC5B,6BAAyB,QAAQ;AACjC,QAAI;AACH,cAAQ,OAAO;AAAA,IAChB,SAAS,OAAO;AAAA,IAEhB;AAAA,EACD;AACD;AAMA,SAAS,2BAA2B;AACnC;AAKD;AAQA,SAAS,uBAAuB,QAAQ,MAAM;AAC7C,MAAI,oBAAoB,KAAK,OAAO,QAAQ,UAAU;AAOrD,UAAM,qBACL,IAAI,SAAS,uCAAuC,KACpD,IAAI,SAAS,+CAA+C;AAC7D,QAAI,mBAAoB;AAAA,EACzB;AACA,yBAAuB,KAAK,GAAG,IAAI;AACpC;",
  "names": []
}
